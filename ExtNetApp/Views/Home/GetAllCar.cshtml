@model System.Collections.IEnumerable
@{
    ViewBag.Title = "GetAllCar";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}
<h2>База данных автомобилей</h2>
<h3>Для удаления - выделить необходимую запись и нажать Delete. <br/>
    Для добавления записи обязательно ввести поле ID отличное от существующих в таблице на данный момент. </h3>

@(Html.X().ResourceManager())

@(X.FormPanel()
        .Title("Company data")
        .Width(800)
        .BodyPadding(10)
        .Layout(LayoutType.Column)
        .FieldDefaults(fd =>
        {
            fd.LabelAlign = LabelAlign.Left;
            fd.MsgTarget = MessageTarget.Side;
        })
        .Items(
            X.GridPanel()
                .Title("Cars Data")
                .ColumnWidth(0.6)
                .Height(400)
                .Store(X.Store()
                    .ID("Store1")
                    .Data(Model)
                    .Model(X.Model()
                        .Fields(f =>
                        {
                            f.Add(X.ModelField().Name("CarId").Type(ModelFieldType.Int));
                            f.Add(X.ModelField().Name("Marks").Type(ModelFieldType.String));
                            f.Add(X.ModelField().Name("Model").Type(ModelFieldType.String));
                            f.Add(X.ModelField().Name("MakingCountry").Type(ModelFieldType.String));
                            f.Add(X.ModelField().Name("Continent").Type(ModelFieldType.String));
                        })
                    )
                )
                .ColumnModel(
                    X.Column().Text("Car №").DataIndex("CarId").Width(60),
                    X.Column().Text("Car mark").DataIndex("Marks").Width(75),
                    X.Column().Text("Car model").DataIndex("Model").Width(75),
                    X.Column().Text("Produsing Country").DataIndex("MakingCountry").Width(120),
                    X.Column().Text("Continent").DataIndex("Continent").Width(120)
                    
                )
                .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }")
                .TopBar(
                    X.Toolbar()
                        .Items(
                            X.Button().ItemID("btnRemove").Text("Delete").Icon(Icon.Exclamation)
                            .DirectClickAction("DeleteCarItem")
                            .Handler("this.up('grid').deleteSelected();")
                        )
                ),
        X.FieldSet()
            .ColumnWidth(0.4)
            .Title("Company details")
            .MarginSpec("0 0 0 10")
            .Defaults(d =>
            {
                d.Add(new Parameter("Width", "240"));
                d.Add(new Parameter("LabelWidth", "90"));
            })
            .Items(
                    X.TextField().Name("CarId").FieldLabel("Car №"),
                X.TextField().Name("Marks").FieldLabel("Mark"),
                X.TextField().Name("Model").FieldLabel("Model"),
                    X.TextField().Name("MakingCountry").FieldLabel("Produsing Country"),
                X.TextField().Name("Continent").FieldLabel("Continent")
            )
        )
        .Buttons(
            X.Button()
                .Text("Save To Grid")
                .Icon(Icon.Add)
                .DirectClickAction("EditCarItem")
                .ToolTip("Нажав сюда вы сохраните запись в базу данных")
                .OnClientClick("var form = this.up('form'); form.getForm().updateRecord(form.down('grid').getSelectionModel().getLastSelected());"),
            X.Button()
                .Text("Reset Fields")
                .ToolTip("Нажав сюда сможете очистить поля для добавления новой записи")
                .OnClientClick("this.up('form').getForm().reset();")
        )
)
