@model IEnumerable<ExtNetApp.Models.CarViewModel>
@{
    ViewBag.Title = "GetAllCar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>GetAllCar</h2>
<table>
    <tr>
        <th>
            Car №
        </th>
        <th>
            Producing country
        </th>
        <th>
            Car mark
        </th>
        <th>
            Car model
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CarID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MakingCountry)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Marks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
        </tr>
    }
</table>
@*@section headtag
{
    <script>
        var template = '<span style="color:{0};">{1}</span>';

        var change = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value);
        };

        var pctChange = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
        };
    </script>
}*@


    <h3>Car table</h3>

    <br />
    @(Html.X().ResourceManager())
    @(Html.X().Store()
                .ID("CarContext")
        .Model(Html.X().Model()
            .Fields(
                        new ModelField("Car №", ModelFieldType.Int),
                new ModelField("Car mark", ModelFieldType.String),
                        new ModelField("Car model", ModelFieldType.String),
                        new ModelField("Producing country", ModelFieldType.String),
                        new ModelField("Contitnent", ModelFieldType.String)
            )
        )
        .DataSource(Model)
                //.Buttons(
                //    X.Button()
                //        .Text("Insert record")
                //        .Icon(Icon.Add)
                //        .Handler("insertRecord")
                //)
    )
    
    @(Html.X().GridPanel()
        .Title("Icons with text")
        .Width(600)
        .Height(300)
        .StoreID("Store1")
        .ColumnModel(
            Html.X().Column()
                .Text("Car №")
                .DataIndex("CarID")
                .Flex(1),
            Html.X().Column()
                .Text("Car mark")
                .DataIndex("Marks")
                .Width(75)
                .Renderer(RendererFormat.UsMoney),
            Html.X().Column()
                .Text("Car model")
                .DataIndex("Model")
                .Width(75)
                .Renderer("change"),
            Html.X().Column()
                .Text("Producing country")
                .DataIndex("Country")
                .Width(75)
                .Renderer("pctChange"),
            Html.X().DateColumn()
                .Text("Continent")
                .Width(85)
                .DataIndex("Continent"),
            Html.X().CommandColumn()
                .Width(110)
                .Commands(
                    Html.X().GridCommand()
                        .CommandName("Delete")
                        .Icon(Icon.Delete)
                        .Text("Delete"),

                    Html.X().GridCommand()
                        .CommandName("Edit")
                        .Icon(Icon.NoteEdit)
                        .Text("Edit")
                )
                .Listeners(ls => ls.Command.Handler = "Ext.Msg.alert(command, record.data.company);")
        )
    )





