@model System.Collections.IEnumerable
           @{
    ViewBag.Title = "GetAllCar";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var X = Html.X();
}
<h2>GetAllCar</h2>
@*<table>
    <tr>
        <th>
            Car №
        </th>
        <th>
            Producing country
        </th>
        <th>
            Car mark
        </th>
        <th>
            Car model
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CarId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MakingCountry)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Marks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
        </tr>
    }
</table>*@
    <script>
        var template = '<span style="color:{0};">{1}</span>';

        var change = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value);
        };

        var pctChange = function (value) {
            return Ext.String.format(template, (value > 0) ? "green" : "red", value + "%");
        };
    </script>

@(Html.X().ResourceManager())

    @(X.FormPanel()
        .Title("Company data")
        .Width(800)
        .BodyPadding(5)
        .Layout(LayoutType.Column)
        .FieldDefaults(fd =>
        {
            fd.LabelAlign = LabelAlign.Left;
            fd.MsgTarget = MessageTarget.Side;
        })
        .Items(
            X.GridPanel()
                .Title("Company Data")
                .ColumnWidth(0.6)
                .Height(400)
                .Store(X.Store()
                    .ID("Store1")
                    .Data(Model)
                    .Reader(new ArrayReader())
                    .Model(X.Model()
                        .Fields(f =>
                        {
                            f.Add(X.ModelField().Name("company"));
                            f.Add(X.ModelField().Name("price").Type(ModelFieldType.Float));
                            f.Add(X.ModelField().Name("change").Type(ModelFieldType.Float));
                            f.Add(X.ModelField().Name("pctChange").Type(ModelFieldType.Float));
                            f.Add(X.ModelField().Name("lastChange").Type(ModelFieldType.Date).DateFormat("M/d hh:mmtt"));
                            f.Add(X.ModelField().Name("rating").Type(ModelFieldType.Int).Convert(j => j.Handler = "var pct = record.get('pctChange'); if (pct < 0) return 2; if (pct < 1) return 1; return 0;"));
                        })
                    )
                )
                .ColumnModel(
                    X.Column().Text("Company").DataIndex("company").Flex(1),
                    X.Column().Text("Price").Width(75).DataIndex("price").Renderer(RendererFormat.UsMoney),
                    X.Column().Text("Change").Width(75).DataIndex("change").Renderer("change"),
                    X.Column().Text("Change").Width(75).DataIndex("pctChange").Renderer("pctChange"),
                    X.DateColumn().Text("Last Updated").Width(85).DataIndex("lastChange"),
                    X.Column().Text("Rating").Width(30).Sortable(true).DataIndex("rating").Renderer("if (value == 0) return 'A'; if (value == 1) return 'B'; if (value == 2) return 'C';")
                )
                .Listeners(l => l.SelectionChange.Handler = "if (selected[0]) { this.up('form').getForm().loadRecord(selected[0]); }"),

        X.FieldSet()
            .ColumnWidth(0.4)
            .Title("Company details")
            .MarginSpec("0 0 0 10")
            .Defaults(d =>
            {
                d.Add(new Parameter("Width", "240"));
                d.Add(new Parameter("LabelWidth", "90"));
            })
            .Items(
                X.TextField()
                    .Name("CarID")
                    .FieldLabel("carId"),
                X.TextField()
                    .Name("Marks")
                    .FieldLabel("Mark"),
                X.TextField()
                    .Name("Model")
                    .FieldLabel("Model"),
                        X.TextField()
                            .Name("MakingCountry")
                            .FieldLabel("Country"),
               X.TextField()
                            .Name("Continent")
                            .FieldLabel("Continent")
            )
        )
        .Buttons(
            X.Button()
                .Text("Save To Grid")
                        .DirectClickAction("EditCarItem")
                .OnClientClick("var form = this.up('form'); form.getForm().updateRecord(form.down('grid').getSelectionModel().getLastSelected());"),
            X.Button()
                .Text("Reset Fields")
                .OnClientClick("this.up('form').getForm().reset();"),
            X.Button()
                .Text("Get Values...")
                .Menu(X.Menu()
                    .Items(
                        X.MenuItem()
                            .Text("Object")
                            .OnClientClick("alert(Ext.encode(this.up('form').getForm().getValues()));"),
                        X.MenuItem()
                            .Text("String")
                            .OnClientClick("alert(this.up('form').getForm().getValues(true));")
                    )
                )
        )
    )
